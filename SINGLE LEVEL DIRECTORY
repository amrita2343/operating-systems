#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#define MAX_FILES 100
struct File {
char name[50];
};
struct File directory[MAX_FILES];
int file_count = 0;
void createFile() {
if (file_count &gt;= MAX_FILES) {
printf(&quot;Directory is full! Cannot create more files.\n&quot;);
return;
}
char filename[50];
printf(&quot;Enter file name to create: &quot;);
scanf(&quot;%s&quot;, filename);
for (int i = 0; i &lt; file_count; i++) {
if (strcmp(directory[i].name, filename) == 0) {
printf(&quot;File &#39;%s&#39; already exists!\n&quot;, filename);
return;
}
}
strcpy(directory[file_count].name, filename);
file_count++;
printf(&quot;File &#39;%s&#39; created successfully!\n&quot;, filename);
}
void deleteFile() {
char filename[50];

printf(&quot;Enter file name to delete: &quot;);
scanf(&quot;%s&quot;, filename);
for (int i = 0; i &lt; file_count; i++) {
if (strcmp(directory[i].name, filename) == 0) {
for (int j = i; j &lt; file_count - 1; j++) {
strcpy(directory[j].name, directory[j + 1].name);
}
file_count--;
printf(&quot;File &#39;%s&#39; deleted successfully!\n&quot;, filename);
return;
}
}
printf(&quot;File &#39;%s&#39; not found!\n&quot;, filename);
}
void searchFile() {
char filename[50];
printf(&quot;Enter file name to search: &quot;);
scanf(&quot;%s&quot;, filename);
for (int i = 0; i &lt; file_count; i++) {
if (strcmp(directory[i].name, filename) == 0) {
printf(&quot;File &#39;%s&#39; found in directory.\n&quot;, filename);
return;
}
}
printf(&quot;File &#39;%s&#39; not found!\n&quot;, filename);
}
void displayFiles() {
if (file_count == 0) {
printf(&quot;Directory is empty!\n&quot;);
return;
}

printf(&quot;\nFiles in directory:\n&quot;);
for (int i = 0; i &lt; file_count; i++) {
printf(&quot;%s\n&quot;, directory[i].name);
}
}
int main() {
int choice;
while (1) {
printf(&quot;\nSingle-Level Directory\n&quot;);
printf(&quot;1. Create File\n&quot;);
printf(&quot;2. Delete File\n&quot;);
printf(&quot;3. Search File\n&quot;);
printf(&quot;4. Display Files\n&quot;);
printf(&quot;5. Exit\n&quot;);
printf(&quot;Enter your choice: &quot;);
scanf(&quot;%d&quot;, &amp;choice);
switch (choice) {
case 1:
createFile();
break;
case 2:
deleteFile();
break;
case 3:
searchFile();
break;
case 4:
displayFiles();
break;
case 5:
printf(&quot;Exiting program.\n&quot;);

return 0;
default:
printf(&quot;Invalid choice! Please try again.\n&quot;);
}
}
}
